-- MySQL Script generated by MySQL Workbench
-- 05/04/16 01:21:56
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Table `user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(255) NOT NULL COMMENT 'Email',
  `password_hash` VARCHAR(255) NOT NULL COMMENT 'Хэш пароля',
  `created_at` DATETIME NOT NULL COMMENT 'Время создания',
  `recovery_code` VARCHAR(32) NULL COMMENT 'Код восстановления пароля',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `unique_email` (`email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user_token`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user_token` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `user_id` INT(11) NOT NULL,
  `code` VARCHAR(32) NOT NULL COMMENT 'Код',
  `created_at` DATETIME NOT NULL COMMENT 'Время создания',
  INDEX `fk_user_token_user_idx` (`user_id` ASC),
  PRIMARY KEY (`id`),
  UNIQUE INDEX `unique_code` (`code` ASC),
  CONSTRAINT `fk_user_token_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `user` (`id`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user_invite`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user_invite` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `referrer_id` INT NULL COMMENT 'ID приглашенного',
  `referral_id` INT NULL COMMENT 'ID пригласившего',
  `email` VARCHAR(255) NOT NULL,
  `code` VARCHAR(10) NOT NULL COMMENT 'Код',
  `created_at` DATETIME NOT NULL COMMENT 'Время создания',
  `role` VARCHAR(45) NOT NULL DEFAULT 'user' COMMENT 'Роль нового пользователя',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `unique_code` (`code` ASC),
  INDEX `fk_referrer_user_idx` (`referrer_id` ASC),
  INDEX `fk_referral_user_idx` (`referral_id` ASC),
  CONSTRAINT `fk_referrer_user`
    FOREIGN KEY (`referrer_id`)
    REFERENCES `user` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_referral_user`
    FOREIGN KEY (`referral_id`)
    REFERENCES `user` (`id`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT)
ENGINE = InnoDB
COMMENT = '	';


-- -----------------------------------------------------
-- Table `organization`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `organization` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `owner_id` INT NOT NULL,
  `code` VARCHAR(45) NULL COMMENT 'Код',
  `name` VARCHAR(255) NULL COMMENT 'Название организации',
  `address` TEXT NULL COMMENT 'Юридический адрес',
  `attestat_number` VARCHAR(45) NULL COMMENT 'Номер аттестата',
  `chief_name` VARCHAR(255) NULL COMMENT 'ФИО руководителя организации',
  `chief_position_name` VARCHAR(255) NULL COMMENT 'Наименование должности руководителя',
  `chief_phone` VARCHAR(20) NULL COMMENT 'Номер телефона руководителя',
  `chief_email` VARCHAR(255) NULL COMMENT 'Адрес электронной почты руководителя',
  PRIMARY KEY (`id`),
  INDEX `fk_owner_user_idx` (`owner_id` ASC),
  CONSTRAINT `fk_owner_user`
    FOREIGN KEY (`owner_id`)
    REFERENCES `user` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `patient`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patient` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `organization_id` INT NOT NULL COMMENT 'ID организации',
  `user_id` INT NOT NULL COMMENT 'ID пользователя',
  `is_unknown` TINYINT(1) NOT NULL DEFAULT 1 COMMENT 'Неизвестный',
  `snils` VARCHAR(12) NULL COMMENT 'СНИЛС',
  `inn` VARCHAR(12) NULL COMMENT 'ИНН',
  `name` VARCHAR(255) NULL COMMENT 'Имя',
  `patronymic` VARCHAR(255) NULL COMMENT 'Отчество',
  `surname` VARCHAR(255) NULL COMMENT 'Фамилия',
  `birthday` DATE NULL COMMENT 'День рождения',
  `birthplace` TEXT NULL COMMENT 'Место рождения',
  `gender` TINYINT NULL COMMENT 'Пол',
  PRIMARY KEY (`id`),
  INDEX `fk_patient_owner_idx` (`organization_id` ASC),
  INDEX `fk_patient_user_idx` (`user_id` ASC),
  CONSTRAINT `fk_patient_organization`
    FOREIGN KEY (`organization_id`)
    REFERENCES `organization` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_patient_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `user` (`id`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `biosignal`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `biosignal` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `patient_id` INT NOT NULL COMMENT 'ID пациента',
  `data` LONGBLOB NOT NULL COMMENT 'Данные биосигнала',
  `created_at` DATETIME NOT NULL COMMENT 'Время создания',
  PRIMARY KEY (`id`),
  INDEX `fk_biosignal_user_idx` (`patient_id` ASC),
  CONSTRAINT `fk_biosignal_user`
    FOREIGN KEY (`patient_id`)
    REFERENCES `patient` (`id`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `patient_to_doctor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `patient_to_doctor` (
  `patient_id` INT NOT NULL,
  `doctor_id` INT NOT NULL,
  INDEX `fk_patient_to_doctor_doctor_idx` (`patient_id` ASC),
  INDEX `fk_patient_to_doctor_patient_idx` (`doctor_id` ASC),
  CONSTRAINT `fk_patient_to_doctor_doctor`
    FOREIGN KEY (`patient_id`)
    REFERENCES `user` (`id`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_patient_to_doctor_patient`
    FOREIGN KEY (`doctor_id`)
    REFERENCES `user` (`id`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `test`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `test` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `patient_id` INT NOT NULL,
  `data` TEXT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_test_patient_idx` (`patient_id` ASC),
  CONSTRAINT `fk_test_patient`
    FOREIGN KEY (`patient_id`)
    REFERENCES `patient` (`id`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
